1) Reverse a linked list: Given a linked list, reverse the linked lst and return the pointer to the reversed list.

class ListNode {
    int val;
    ListNode next;  
    ListNode(int val) {
        this.val = val;
        this.next = null;
    }
}
public class ReverseLinkedList {
    public static ListNode reverseList(ListNode head) {
        ListNode prev = null;
        ListNode current = head;
        ListNode nextNode = null;        
        while (current != null) {
            nextNode = current.next;
            current.next = prev;      
            prev = current;           
            current = nextNode;       
        }        
        return prev; 
    }
    public static void printList(ListNode head) {
        ListNode temp = head;
        while (temp != null) {
            System.out.print(temp.val + " -> ");
            temp = temp.next;
        }
        System.out.println("null");
    }
    public static void main(String[] args) {
        ListNode head = new ListNode(1);
        head.next = new ListNode(2);
        head.next.next = new ListNode(3);
        head.next.next.next = new ListNode(4);
        head.next.next.next.next = new ListNode(5);
        System.out.println("Original Linked List:");
        printList(head);
        ListNode reversedHead = reverseList(head);
        System.out.println("Reversed Linked List:");
        printList(reversedHead);
    }
}
